1. <programa> ::= <declara¸c˜ao-lista>
2. <declara¸c˜ao-lista> ::= <declara¸c˜ao> {<declara¸c˜ao>}
3. <declara¸c˜ao> ::= <var-declara¸c˜ao> | <fun-declara¸c˜ao>
4. <var-declara¸c˜ao> ::= <tipo-especificador> <ident> ; | <tipo-especificador> <ident> <abre-colchete> <num-int> <fecha-colchete> {<abre-colchete> <num-int> <fecha-colchete>} ;
5. <tipo-especificador> ::= int | float | char | void | struct <ident> <abre-chave> <atributos-declara¸c˜ao> <fecha-chave>
6. <atributos-declara¸c˜ao> ::= <var-declara¸c˜ao> {<var-declara¸c˜ao>}
X <fun-declara¸c˜ao> ::= <tipo-especificador> <ident> ( <params> ) <composto-decl> 
8. <params> ::= <param-lista> | void 
9. <param-lista> ::= <param> {, <param>} 
10. <param> ::= <tipo-especificador> <ident> | <tipo-especificador> <ident> <abre-colchete> <fecha-colchete> 
x <composto-decl> ::= <abre-chave> <local-declara¸c˜oes> <comando-lista> <fecha-chave>
x <local-declara¸c˜oes> ::= {<var-declara¸c˜ao>}
x <comando-lista> ::= { <comando> }
x <comando> ::= <express˜ao-decl> | <composto-decl> | <sele¸c˜ao-decl> | <itera¸c˜ao-decl> | <retorno-decl>
x <express˜ao-decl> ::= <express˜ao> ; | ;
x <sele¸c˜ao-decl> ::= if ( <express˜ao> ) <comando> | if ( <express˜ao> ) <comando> else <comando>
x <itera¸c˜ao-decl> ::= while ( <express˜ao> ) <comando>
x <retorno-decl> ::= return ; | return <express˜ao> ;
x <express˜ao> ::= <var> = <express˜ao> | <express˜ao-simples>
21. <var> ::= <ident> | <ident> <abre-colchete> <express˜ao> <fecha-colchete> {<abre-colchete> <express˜ao> <fecha-colchete>}
x <express˜ao-simples> ::= <express˜ao-soma> <relacional> <express˜ao-soma> | <express˜ao-soma>
24. <relacional> ::= <= | < | > | >= | == | !=
x <express˜ao-soma> ::= <termo> {<soma> <termo>}
26. <soma> ::= + | -
x <termo> ::= <fator> {<mult> <fator>}
28. <mult> ::= * | /
x <fator> ::= ( <express˜ao> ) | <var> | <ativa¸c˜ao> | <num> | <num-int>
x <ativa¸c˜ao> ::= <ident> ( <args> )
x <args> ::= [<arg-lista>]
x <arg-lista> ::= <express˜ao> {, <express˜ao>}
x <num> ::= [+ | -] <d´ıgito> {<d´ıgito>} [. <d´ıgito> {<d´ıgito>}] [E [+ | -] <d´ıgito> {<d´ıgito>}]
34. <num-int> ::= <d´ıgito> {<d´ıgito>}
35. <digito> ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
36. <ident> ::= <letra> {<letra> | <d´ıgito>}
37. <letra> ::= a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z
38. <abre-chave> ::= {
39. <fecha-chave> ::= }
40. <abre-colchete> ::= [
41. <fecha-colchete> ::= ]